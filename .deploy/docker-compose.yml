services:
  configserver:
    build:
      context: ../config
      dockerfile: ../.deploy/Dockerfile
    container_name: configserver
    ports:
      - 8888:8888
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8888/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    environment:
      - JAVA_OPTS=
        -Dserver.port=8888

  discovery:
    build:
      context: ../discovery
      dockerfile: ../.deploy/Dockerfile
    container_name: discovery
    depends_on:
      configserver:
        condition: service_healthy
    ports:
      - 8761:8761
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8761/actuator/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 15s
    environment:
      - JAVA_OPTS=
        -Dserver.port=8761 -Dconfig.url=http://configserver:8888

  user-service:
    build:
      context: ../user_service
      dockerfile: ../.deploy/Dockerfile
    container_name: user_service
    depends_on:
      configserver:
        condition: service_healthy
      discovery:
        condition: service_healthy
      user-service-db:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://user-service-db:5435/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - JAVA_OPTS=
        -Ddiscovery.url=http://discovery:8761/eureka -Dconfig.url=http://configserver:8888

  gateway:
    build:
      context: ../gateway
      dockerfile: ../.deploy/Dockerfile
    container_name: gateway
    depends_on:
      configserver:
        condition: service_healthy
      discovery:
        condition: service_healthy
      user-service:
        condition: service_started
    environment:
      - JAVA_OPTS=
        -Dserver.port=9000 -Ddiscovery.url=http://discovery:8761/eureka -Dconfig.url=http://configserver:8888
    ports:
      - 9000:9000

  instrument-service:
    build:
      context: ../instrument_service
      dockerfile: ../.deploy/Dockerfile
    container_name: instrument_service
    depends_on:
      configserver:
        condition: service_healthy
      discovery:
        condition: service_healthy
      instrument-service-db:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://instrument-service-db:5432/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - SPRING_JPA_HIBERNATE_DDL_AUTO=none
      - JAVA_OPTS=
        -Ddiscovery.url=http://discovery:8761/eureka -Dconfig.url=http://configserver:8888

  market-service:
    build:
      context: ../market_service
      dockerfile: ../.deploy/Dockerfile
    container_name: market_service
    depends_on:
      configserver:
        condition: service_healthy
      discovery:
        condition: service_healthy
      market-service-db:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://market-service-db:5433/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - JAVA_OPTS=
        -Ddiscovery.url=http://discovery:8761/eureka -Dconfig.url=http://configserver:8888

  market-instrument-id-service:
    build:
      context: ../market_instrument_id_service
      dockerfile: ../.deploy/Dockerfile
    container_name: market_instrument_id_service
    depends_on:
      configserver:
        condition: service_healthy
      discovery:
        condition: service_healthy
      market-instrument-id-service-db:
        condition: service_started
      instrument-service:
        condition: service_started
      market-service:
        condition: service_started
    environment:
      - JAVA_OPTS=
        -Ddiscovery.url=http://discovery:8761/eureka -Dconfig.url=http://configserver:8888 -Dspring.r2dbc.url=r2dbc:postgresql://market-instrument-id-service-db:5434/postgres -Dspring.r2dbc.username=postgres -Dspring.r2dbc.password=postgres -Dspring.liquibase.url=jdbc:postgresql://market-instrument-id-service-db:5434/postgres -Dspring.liquibase.user=postgres -Dspring.liquibase.password=postgres -Dspring.liquibase.change-log=classpath:db/changelog/db.changelog-master.xml

  trade-service:
    build:
      context: ../trade_service
      dockerfile: ../.deploy/Dockerfile
    container_name: trade_service
    depends_on:
      configserver:
        condition: service_healthy
      discovery:
        condition: service_healthy
      trade-service-db:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://trade-service-db:5436/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - JAVA_OPTS=
        -Ddiscovery.url=http://discovery:8761/eureka -Dconfig.url=http://configserver:8888

  order-service:
    build:
      context: ../order_service
      dockerfile: ../.deploy/Dockerfile
    container_name: order_service
    depends_on:
      configserver:
        condition: service_healthy
      discovery:
        condition: service_healthy
      trade-service:
        condition: service_started
      order-service-db:
        condition: service_started
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://order-service-db:5437/postgres
      - SPRING_DATASOURCE_USERNAME=postgres
      - SPRING_DATASOURCE_PASSWORD=postgres
      - JAVA_OPTS=
        -Ddiscovery.url=http://discovery:8761/eureka -Dconfig.url=http://configserver:8888

  instrument-service-db:
    image: 'postgres:13.1-alpine'
    container_name: instrument-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPORT=5432
    volumes:
      - instrument-service-db-data:/var/lib/postgresql/data

  market-service-db:
    image: 'postgres:13.1-alpine'
    container_name: market-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPORT=5433
    volumes:
      - market-service-db-data:/var/lib/postgresql/data

  market-instrument-id-service-db:
    image: 'postgres:13.1-alpine'
    container_name: market-instrument-id-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPORT=5434
    volumes:
      - market-instrument-id-service-db-data:/var/lib/postgresql/data

  user-service-db:
    image: 'postgres:13.1-alpine'
    container_name: user-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPORT=5435
    volumes:
      - user-service-db-data:/var/lib/postgresql/data

  trade-service-db:
    image: 'postgres:13.1-alpine'
    container_name: trade-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPORT=5436
    volumes:
      - trade-service-db-data:/var/lib/postgresql/data

  order-service-db:
    image: 'postgres:13.1-alpine'
    container_name: order-service-db
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - PGPORT=5437
    volumes:
      - order-service-db-data:/var/lib/postgresql/data

  # --------------------------
  # - Monitoring and tracing -
  # --------------------------
  jaeger:
    image: jaegertracing/all-in-one:1.17
    ports:
      - "6831:6831/udp"
      - "16686:16686"

volumes:
  user-service-db-data:
  instrument-service-db-data:
  market-service-db-data:
  market-instrument-id-service-db-data:
  trade-service-db-data:
  order-service-db-data:
