name: Publish images

on:
  push:
    branches: ['master']

env:
  REGISTRY: ghcr.io

jobs:
  build-and-push-image:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - image: ghcr.io/iAnt0n/gateway
            context : gateway/
          - image: ghcr.io/iAnt0n/instrument-service
              context: instrument_service/
          - image: ghcr.io/iAnt0n/market-instrument-id-service
              context: market_instrument_id_service/
          - image: ghcr.io/iAnt0n/market-service
              context: market_service/
          - image: ghcr.io/iAnt0n/order-service
              context: order_service/
          - image: ghcr.io/iAnt0n/trade-service
              context: trade_service/
          - image: ghcr.io/iAnt0n/user_service
              context: user_service/
          - image: ghcr.io/iAnt0n/config-service
              context: config/
          - image: ghcr.io/iAnt0n/discovery
              context: discovery/
    steps:
      - name: dirty-dirty docker
        run: |
          sudo mkdir -p /etc/systemd/system/docker.service.d/
          sudo touch /etc/systemd/system/docker.service.d/docker.conf
          echo -e '[Service]\nExecStart=\nExecStart=/usr/bin/dockerd -H unix:///var/run/docker.sock -H tcp://0.0.0.0:2376\n' | sudo tee -a /etc/systemd/system/docker.service.d/docker.conf
          sudo systemctl daemon-reload
          sudo systemctl restart docker.service

      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@98669ae865ea3cffbcbaa878cf57c20bbf1c6c38
        with:
          images: ${{ matrix.image }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v3
        with:
          context: ${{ matrix.context }}
          file: .deploy/Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}